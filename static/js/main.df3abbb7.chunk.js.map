{"version":3,"sources":["assets/logo.png","styles/GlobalStyles.js","themes/Theme.js","graphql/Queries.js","components/Character.element.js","components/Character.js","components/Loadings.js","components/Button.elemtens.js","components/Error.js","components/Noper.js","pages/Home.js","App.js","features/characterSlice.js","reducers/store.js","index.js"],"names":["module","exports","__webpack_require__","p","GlobalStyles","createGlobalStyle","_templateObject","Object","taggedTemplateLiteral","Theme","primary","secondary","light","dark","red","green","blue","yellow","orange","purple","pink","brown","black","white","Alive","Dead","error","load","unknown","GET_CHARACTER","gql","Queries_templateObject","Headers","styled","h1","Character_element_templateObject","_ref","theme","Headersb","_templateObject2","_ref2","_ref3","Title","h2","_templateObject3","_ref4","Estado","i","_templateObject4","div","_templateObject5","_ref5","_ref6","_ref7","_ref8","_ref9","Character","_templateObject6","_ref10","_ref11","character","react_default","a","createElement","className","id","status","src","image","alt","name","species","type","origin","location","Date","created","toLocaleDateString","Loadings","Button","button","Button_elemtens_templateObject","props","color","Error","onClick","window","reload","No","h3","Noper_templateObject","Noper","Home","_React$useState","React","_React$useState2","slicedToArray","list","setList","_React$useState3","_React$useState4","currentCharacter","setCurrentCharacter","_useLazyQuery","useLazyQuery","onCompleted","data","concat","toConsumableArray","_useLazyQuery2","getCharacter","_useLazyQuery2$","loading","react","Loadings_Loadings","Error_Error","todos","scrollTo","top","behavior","variables","Math","floor","random","Noper_Noper","components_Character","length","map","key","filter","App","styles_GlobalStyles","styled_components_browser_esm","Logo","pages_Home","characterSlice","createSlice","initialState","url","episode","reducers","addCharacter","state","action","push","payload","actions","store","configureStore","reducer","characterReducer","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","createRoot","document","getElementById","render","ApolloProvider","es","src_App"],"mappings":"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","file":"static/js/main.df3abbb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9678650c.png\";","import {createGlobalStyle} from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n* {\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n  }\r\n  \r\n  body {\r\n    font-family: \"Roboto\", sans-serif;\r\n    background-color: var(--color-dark);\r\n  }\r\n  \r\n  .container-princ {\r\n    padding: 66px 90px 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  /* List character .css: */\r\n  \r\n  .container-list{\r\n      border: #08b2c9 solid 1px;\r\n    \r\n  }\r\n  \r\n  .container-name {\r\n    padding: 1.25rem;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    font-size: 22px;\r\n    display: grid;\r\n  }\r\n  \r\n  .name-list {\r\n      border-bottom: #08b2c9 solid 1px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .list-characters {\r\n    padding: 66px 90px 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .img-list img {\r\n    \r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 50%;\r\n    margin: 0 auto;\r\n    display: block;\r\n    opacity: 0.5;\r\n  }\r\n  \r\n  .img-list img:hover {\r\n    opacity: 1;\r\n    transition: 0.5s;\r\n  }\r\n  \r\n  \r\n  \r\n  :root {\r\n    --color-primary: #08b2c9;\r\n    --color-secondary: #28527a;\r\n    --color-light: #dbf6e9;\r\n    --color-dark: #151515;\r\n    --color-red: #ff0000;\r\n    --color-green: #00ff00;\r\n    --color-blue: #0000ff;\r\n    --color-yellow: #ffff00;\r\n    --color-orange: #ffa500;\r\n    --color-purple: #800080;\r\n    --color-pink: #ffc0cb;\r\n    --color-brown: #8b4513;\r\n    --color-black: #000000;\r\n    --color-white: #ffffff;\r\n  }\r\n  \r\n  .error {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: red;\r\n  }\r\n  \r\n  .load {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .container-logo {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    text-align: center;\r\n  }\r\n  \r\n  .logo {\r\n    height: 40vmin;\r\n    pointer-events: none;\r\n  }\r\n  \r\n  .btn {\r\n    width: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    max-width: 1200px;\r\n    padding: 0 2rem;\r\n  }\r\n  \r\n  .personaje {\r\n    background: var(--color-secondary);\r\n    border-radius: 0.3rem;\r\n    box-shadow: 0 0 1rem 0 rgba(255, 255, 255, 0.1);\r\n    display: grid;\r\n    grid-template: 10rem auto / 1fr;\r\n    overflow: hidden;\r\n    animation: showCard 0.5s linear;\r\n  }\r\n  @keyframes showCard {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n  }\r\n  .personaje-header {\r\n    padding: 2rem;\r\n    text-align: right;\r\n  }\r\n  .estado {\r\n    background: var(--color-secondary);\r\n    display: inline-flex;\r\n    color: var(--color-light);\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 2.5rem;\r\n    font-size: 1.2rem;\r\n    width: auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n  }\r\n  .estado span {\r\n    display: block;\r\n    height: 1rem;\r\n    width: 1rem;\r\n    border-radius: 50%;\r\n  }\r\n  .personaje-body {\r\n    padding: 8rem 2rem 4rem;\r\n    position: relative;\r\n  }\r\n  .personaje-body figure {\r\n    position: absolute;\r\n    display: block;\r\n    width: 12rem;\r\n    height: 12rem;\r\n    border-radius: 50%;\r\n    top: -6rem;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    box-shadow: 0 0 1rem 0 var(--color-light);\r\n    overflow: hidden;\r\n  }\r\n  .personaje-body figure img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n  .personaje-body h2 {\r\n    width: 100%;\r\n    background: var(--color-primary);\r\n    color: var(--color-dark);\r\n    border-radius: 0.5rem;\r\n    height: 3rem;\r\n    line-height: 3rem;\r\n    text-align: center;\r\n    transition-property: background, color;\r\n    font-size: 1.8rem;\r\n  }\r\n  .personaje-body p {\r\n      width: 100%;\r\n      background: rgba(219, 246, 233, 0.9);\r\n      border-radius: 0.5rem;\r\n      height: 4rem;\r\n      margin-top: 0.5rem;\r\n      line-height: 4rem;\r\n      text-align: center;\r\n      font-size: larger;\r\n      font-weight: 500;\r\n  }\r\n  .personaje-body p span {\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .btn-list {\r\n  \r\n      display: flex;\r\n      margin: 0.5rem 0;\r\n      flex-direction: column;\r\n   \r\n  }\r\n  \r\n  .btn-random {\r\n      border-radius: 0.5rem;\r\n      padding: 0.5rem 1rem;\r\n      font-size: 1.2rem;\r\n      width: auto;\r\n      justify-content: center;\r\n      align-items: center;\r\n      grid-column-gap: 0rem;\r\n      column-gap: 0rem;\r\n      margin-bottom: 5%;\r\n      display: flex;\r\n  }\r\n  \r\n  .icon-random {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    margin-right: 0.5rem;\r\n    fill: var(--color-dark);\r\n  }\r\n  \r\n  \r\n  @media screen and (max-width: 600px) {\r\n      .btn-random {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n        \r\n          max-width: 1200px;\r\n          padding: 0 2rem; \r\n  \r\n      }\r\n      .container-princ {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      padding: 0;\r\n     \r\n      }\r\n  \r\n      .personaje {\r\n          grid-template: 1fr auto / 1fr;\r\n      }\r\n  \r\n          .personaje-header {\r\n            padding: 5rem;\r\n            text-align: initial;\r\n            display: flex;\r\n            justify-content: center;\r\n            padding-top: initial;\r\n          }\r\n  \r\n      .btn-list {\r\n          align-items: center;\r\n          justify-content: space-around;\r\n          flex-direction: inherit;\r\n      }\r\n      \r\n      \r\n    img {\r\n      max-width: 100%;\r\n      max-height: 100%;\r\n    }\r\n  }\r\n  \r\n  @media screen and (min-width: 1000px) {\r\n      .personaje {\r\n          grid-template: 10rem auto / 1fr;\r\n      }\r\n  \r\n  }\r\n  \r\n\r\n`;\r\n\r\nexport default GlobalStyles;","const Theme = {\r\n    primary: \"#08b2c9\",\r\n    secondary: \"#28527a\",\r\n    light: \"#dbf6e9\",\r\n    dark: \"#151515\",\r\n    red: \"#ff0000\",\r\n    green: \"#00D146\",\r\n    blue: \"#0000ff\",\r\n    yellow: \"#ffff00\",\r\n    orange: \"#ffa500\",\r\n    purple: \"#800080\",\r\n    pink: \"#ffc0cb\",\r\n    brown: \"#8b4513\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n    Alive: \"#00D146\",\r\n    Dead: \"#ff0000\",\r\n    error: \"#ff0000\",\r\n    load: \"#ffffff\",\r\n    unknown: \"#ffffff\",\r\n}\r\n\r\nexport { Theme };","import { gql } from \"@apollo/client\";\r\n\r\nconst GET_CHARACTER = gql`\r\n  query GetCharacter($id: ID!) {\r\n    character(id: $id) {\r\n      name\r\n      id\r\n      name\r\n      image\r\n      status\r\n      species\r\n      type\r\n      origin {\r\n        name\r\n      }\r\n      location {\r\n        name\r\n      }\r\n      gender\r\n      created\r\n    }\r\n  }\r\n`;\r\nexport default GET_CHARACTER;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Headers = styled.h1`\r\n  color: ${({ theme }) => theme.primary};\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n`\r\nexport const Headersb = styled(Headers)`\r\n  color: ${({ theme }) => theme.light};\r\n  font-size: 4rem;\r\n  font-weight: bold;\r\n  font-size: 2.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n  background-color: ${({ theme }) => theme.secondary};\r\n  border-radius: 0.5rem;\r\n  padding: 0.2rem 1rem;\r\n  font-size: 2.2rem;\r\n  width: auto;\r\n  \r\n\r\n`\r\nexport const Title = styled.h2`\r\n  color:${({ theme }) => theme.light};\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  font-size: 2.5rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\nexport const Icon = styled.i`\r\n  color: #fff;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  font-size: 2.5rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n`\r\nexport const Estado = styled.div`\r\n     background: ${({ theme }) => theme.light};\r\n    padding: 2rem;\r\n    text-align: right;\r\n  \r\n span{\r\n  display: block;\r\n    height: 1rem;\r\n    width: 1rem;\r\n    border-radius: 50%;\r\n  }\r\n    &estado{\r\n    background: ${({ theme }) => theme.dark};\r\n    display: inline-flex;\r\n    color: var(--color-light);\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 2.5rem;\r\n    font-size: 1.2rem;\r\n    width: auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n  }\r\n  & .estado span{\r\n    display: block;\r\n    height: 1rem;\r\n    width: 1rem;\r\n    border-radius: 50%;\r\n  }\r\n  .Alive{\r\n    background: ${({ theme }) => theme.green};\r\n  }\r\n  .Dead{\r\n    background: ${({ theme }) => theme.red};\r\n  }\r\n  .unknown{\r\n    background: ${({ theme }) => theme.unknown};\r\n\r\n  }\r\n \r\n`\r\nexport const Personaje = styled.div`\r\n     background: ${({ theme }) => theme.secondary};\r\n    border-radius: 0.3rem;\r\n    box-shadow: 0 0 1rem 0 rgba(255, 255, 255, 0.1);\r\n    display: grid;\r\n    grid-template: 10rem auto / 1fr;\r\n    overflow: hidden;\r\n    animation: showCard 0.5s linear;\r\n    @keyframes showCard {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n\r\n  & .personaje-header{\r\n    padding: 2rem;\r\n    text-align: right;\r\n  }\r\n\r\n  & .estado{\r\n    background: ${({ theme }) => theme.secondary};\r\n    display: inline-flex;\r\n    color: var(--color-light);\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 2.5rem;\r\n    font-size: 1.2rem;\r\n    width: auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n  }\r\n\r\n\r\n`  ","import React from \"react\";\r\n\r\n//Styled Components\r\nimport { Headersb, Title, Estado,} from \"./Character.element\";\r\n\r\nconst Character = ({ character }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"personaje\">\r\n        <Title>id : {character.id}</Title>\r\n        <Estado >\r\n        <div className=\"personaje-header\">\r\n          <div className=\"estado\">\r\n            <span className={character.status}></span>\r\n            <div>{character.status}</div>\r\n          </div>\r\n          </div>\r\n          </Estado>\r\n        <div className=\"personaje-body\">\r\n          <figure>\r\n            <img src={character.image} alt={character.name} />\r\n          </figure>\r\n          <Headersb>{character.name}</Headersb>\r\n          <p>\r\n            <b>Specie</b> : {character.species}\r\n          </p>\r\n          <p>\r\n            <b>Types</b> : {character.type ? character.type : \"no Type\"}\r\n          </p>\r\n          <p>\r\n            <b>Origin : </b>\r\n            {character.origin.name ? character.origin.name : \"no Origin\"}\r\n          </p>\r\n          <p>\r\n            <b>Location : </b>\r\n            {character.location.name ? character.location.name : \"no Location\"}\r\n          </p>\r\n          <p>\r\n            <b>Created at</b> :{\" \"}\r\n            {new Date(character.created).toLocaleDateString()}\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React from 'react'\r\n\r\n\r\nexport const Loadings = () => {\r\n  return (\r\n    <div className='load'>\r\n        <img src=\"https://acegif.com/wp-content/uploads/loading-23.gif\" alt=\"loading\" />\r\n    </div>\r\n  )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0.5rem 0;\r\n    flex-direction: column;\r\n    scroll-behavior: smooth;\r\n    font-size: 1.6rem;\r\n    font-weight: bold;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: all 0.1s;\r\n    background: ${({ theme }) => theme.white};\r\n    color: ${(props) => props.theme.primary? (props.theme.dark) : (props.theme.secondary)};\r\n    box-shadow: 0px 0px 5px rgba(0,0,0,0.1);\r\n    &:hover {\r\n        background: ${({color}) => color ? color : (props) => props.theme.secondary};\r\n        color: ${({ theme }) => theme.light};\r\n    }\r\n`;\r\n\r\n\r\n","import React from 'react'\r\nimport { Button } from './Button.elemtens'\r\n\r\nexport const Error = () => {\r\n  return (\r\n    <div className='load'>\r\n    <img src=\"https://c.tenor.com/jwAkhSG3BWEAAAAC/error.gif\" alt=\"error\"/>\r\n      <Button onClick={() => window.location.reload()}>\r\n        Try again\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst No = styled.h3`\r\n    color: var(--color-light);\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n    `\r\n  \r\n\r\nexport const Noper = () => {\r\n  return (\r\n    \r\n    <No>\r\n    Not character !please click on button random!\r\n    </No>\r\n    \r\n  )\r\n}\r\n","import * as React from \"react\";\r\n\r\n//GraphQL\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport GET_CHARACTER from \"../graphql/Queries\";\r\n\r\n//components React\r\nimport Character from \"../components/Character\";\r\nimport { Loadings } from \"../components/Loadings\";\r\nimport { Error } from \"../components/Error\";\r\nimport { Noper } from \"../components/Noper\";\r\n\r\n\r\n//Styled Components\r\nimport { Headers, Title } from \"../components/Character.element\";\r\nimport { Button,} from \"../components/Button.elemtens\";\r\n\r\nfunction Home() {\r\n  const [list, setList] = React.useState([]);\r\n  const [currentCharacter, setCurrentCharacter] = React.useState(null);\r\n  const [getCharacter, { loading, error, data }] = useLazyQuery(GET_CHARACTER, {\r\n    onCompleted: (data) => {\r\n      setList([data.character, ...list]);\r\n      setCurrentCharacter(data.character);\r\n    },\r\n  });\r\n\r\n  if (loading) return <Loadings />;\r\n  if (error) return <Error />;\r\n\r\n  // Generate a random number between 1 and 826\r\n\r\n  function randomNumber() {\r\n    return Math.floor(Math.random() * 826) + 1;\r\n  }\r\n\r\n \r\n  // Contador de personajes\r\n\r\n  // scroll to top\r\n  function scrollToTop() {\r\n    window.scrollTo({ top: 200, behavior: \"smooth\" });\r\n  }\r\n\r\n  //Delete character from list\r\n  function deleteCharacter(id) {\r\n    setList(list.filter((character) => character.id !== id));\r\n  }\r\n\r\n  // two functions to get the next and previous character\r\n  function todos(character) {\r\n    setCurrentCharacter(character);\r\n    scrollToTop();\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container-princ\">\r\n      <div className=\"btn-random\">\r\n        <Button\r\n          onClick={() => getCharacter({ variables: { id: randomNumber() } })}\r\n        >\r\n          {\" \"}\r\n          Get Character Random\r\n        </Button>\r\n        </div>\r\n        <>\r\n        {!currentCharacter && <Noper /> !== null && <Noper />}\r\n        </>\r\n      <div className=\"container-list\">\r\n        {data && <Character character={currentCharacter} />}\r\n        {list.length > 0 && (\r\n          <>\r\n            <Title>history</Title>\r\n            {list.map((character) => (\r\n              <div className=\"lis-characters\" key={character.id}>\r\n                <div className=\"container-name\">\r\n                  <Headers className=\"name-list\">{character.name}</Headers>\r\n                  <div className=\"img-list\">\r\n                    <img src={character.image} alt={character.name} />\r\n                    </div>\r\n                    <div className=\"btn-list\">\r\n                      <Button color={\"#00D146\"} onClick={() => todos(character)}>view</Button>\r\n                        <Button color={\"#D10000\"}\r\n                          onClick={() => deleteCharacter(character.id)}\r\n                        >\r\n                          Delete \r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import * as React from \"react\";\nimport Logo from \"../src/assets/logo.png\";\nimport GlobalStyles from \"././styles/GlobalStyles\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Theme } from \"././themes/Theme\";\nimport Home from \"../src/pages/Home\";\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <>\n    <GlobalStyles />\n    <ThemeProvider theme={Theme}>\n      <div className=\"container-logo\">\n        <div className=\"logo\">\n          <img src={Logo} alt=\"logo\" />\n        </div>\n      </div>\n      <Home />\n    </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n    const initialState = [\r\n        {\r\n            id: 1,\r\n            name: \"Rick Sanchez\",\r\n            image:  \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\",\r\n            status: \"Alive\",\r\n            species: \"Human\",\r\n            type: \"\",\r\n            origin: {\r\n                name: \"Earth (C-137)\",\r\n                url: \"https://rickandmortyapi.com/api/location/1\",\r\n            },\r\n            location: {\r\n                name: \"Earth (Replacement Dimension)\",\r\n                url: \"https://rickandmortyapi.com/api/location/20\",\r\n            },\r\n            created: \"2017-11-04T18:48:46.250Z\",\r\n            episode: [\r\n                \"https://rickandmortyapi.com/api/episode/1\",\r\n                \"https://rickandmortyapi.com/api/episode/2\",\r\n                \"https://rickandmortyapi.com/api/episode/3\",\r\n                \"https://rickandmortyapi.com/api/episode/4\",\r\n                \"https://rickandmortyapi.com/api/episode/5\",\r\n                \"https://rickandmortyapi.com/api/episode/6\",\r\n                \"https://rickandmortyapi.com/api/episode/7\",\r\n                \"https://rickandmortyapi.com/api/episode/8\",\r\n\r\n    \r\n            ],\r\n            url: \"https://rickandmortyapi.com/api/character/1\",\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Morty Smith\",\r\n            image: \"https://rickandmortyapi.com/api/character/avatar/2.jpeg\",\r\n            status: \"Alive\",\r\n            species: \"Human\",\r\n            type: \"\",\r\n            origin: {\r\n                name: \"Earth (C-137)\",\r\n                url: \"https://rickandmortyapi.com/api/location/1\",\r\n            },\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Summer Smith\",\r\n            image: \"https://rickandmortyapi.com/api/character/avatar/3.jpeg\",\r\n            status: \"Alive\",\r\n            species: \"Human\",\r\n            type: \"\",\r\n            origin: {\r\n                name: \"Earth (C-137)\",\r\n                url: \"https://rickandmortyapi.com/api/location/1\",\r\n            },\r\n        },\r\n\r\n               \r\n    ] ;\r\n    const characterSlice = createSlice({\r\n        name: \"character\",\r\n        initialState,\r\n        reducers: {\r\n          addCharacter: (state, action) => {\r\n            state.push(action.payload);\r\n          }\r\n            \r\n        }\r\n    });\r\n\r\n    // export addCharacter from characterSlice;\r\n    export const { addCharacter } = characterSlice.actions;\r\n\r\n    export default characterSlice.reducer;","import {configureStore} from '@reduxjs/toolkit';\r\nimport characterReducer from \"../features/characterSlice\";\r\n\r\nexport const store = configureStore({\r\n   \r\n      reducer: {\r\n         character: characterReducer,\r\n      }\r\n\r\n    })\r\n\r\n","import React from 'react';\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {store} from \"../src/reducers/store\";\n\n\n//redux\nimport { Provider } from \"react-redux\";\n\n\n\n\n// CLiente apollo server\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\n\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </ApolloProvider>\n);\n\n"],"sourceRoot":""}